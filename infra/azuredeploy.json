{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "5046726426319613362"
    }
  },
  "parameters": {
    "devcenterName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of Dev Center e.g. dc-devbox-test"
      }
    },
    "networkConnectionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of Network Connection e.g. con-devbox-test"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of Dev Center project e.g. dcprj-devbox-test"
      }
    },
    "existingSubnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet resource id if the user wants to use existing subnet"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Primary location for all resources e.g. eastus"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the Virtual Network e.g. vnet-dcprj-devbox-test-eastus"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "the subnet name of Dev Box e.g. default"
      }
    },
    "vnetAddressPrefixes": {
      "type": "string",
      "defaultValue": "10.4.0.0/16",
      "metadata": {
        "description": "The vnet address prefixes of Dev Box e.g. 10.4.0.0/16"
      }
    },
    "subnetAddressPrefixes": {
      "type": "string",
      "defaultValue": "10.4.0.0/24",
      "metadata": {
        "description": "The subnet address prefixes of Dev Box e.g. 10.4.0.0/24"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The user or group id that will be granted to Devcenter Dev Box User role"
      }
    },
    "principalType": {
      "type": "string",
      "defaultValue": "User",
      "metadata": {
        "description": "The type of principal id: User, Group or ServicePrincipal"
      }
    },
    "keyvaultName": {
      "type": "string",
      "defaultValue": ""
    },
    "keyvaultSecretName": {
      "type": "string",
      "defaultValue": "repo-pat-secret"
    },
    "keyvaultSecretValue": {
      "type": "securestring",
      "metadata": {
        "description": "The personal access token of Github/ADO repo"
      }
    },
    "galleryName": {
      "type": "string",
      "defaultValue": ""
    },
    "imageDefinitionName": {
      "type": "string",
      "defaultValue": "OpenAIImage"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "windows-ent-cpc"
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "microsoftwindowsdesktop"
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "win11-22h2-ent-cpc-m365-test"
    },
    "catalogItemRootPath": {
      "type": "string",
      "defaultValue": "/Environments"
    },
    "managedIdentityName": {
      "type": "string",
      "defaultValue": ""
    },
    "repositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/luxu-ms/deployment-environments.git"
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "$fxv#0": {
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkConnections": "con-",
      "devcenter": "dc-",
      "devcenterProject": "dcprj-",
      "devcenterNetworkingResourceGroup": "ni-",
      "keyvault": "kv-",
      "computeGalleries": "gal",
      "managedIdentityUserAssignedIdentities": "id-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(resourceGroup().id, parameters('location')))]",
    "ncName": "[if(not(empty(parameters('networkConnectionName'))), parameters('networkConnectionName'), format('{0}{1}', variables('abbrs').networkConnections, variables('resourceToken')))]",
    "kvName": "[if(not(empty(parameters('keyvaultName'))), parameters('keyvaultName'), format('{0}{1}', variables('abbrs').keyvault, variables('resourceToken')))]"
  },
  "resources": [
    {
      "condition": "[empty(parameters('existingSubnetId'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "vnetAddressPrefixes": {
            "value": "[parameters('vnetAddressPrefixes')]"
          },
          "vnetName": "[if(not(empty(parameters('vnetName'))), createObject('value', parameters('vnetName')), createObject('value', format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))))]",
          "subnetAddressPrefixes": {
            "value": "[parameters('subnetAddressPrefixes')]"
          },
          "subnetName": "[if(not(empty(parameters('subnetName'))), createObject('value', parameters('subnetName')), createObject('value', format('{0}{1}', variables('abbrs').networkVirtualNetworksSubnets, variables('resourceToken'))))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "18359028573741597679"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Virtual Network"
              }
            },
            "subnetName": {
              "type": "string",
              "metadata": {
                "description": "the app subnet name of Dev Box"
              }
            },
            "vnetAddressPrefixes": {
              "type": "string",
              "metadata": {
                "description": "The address prefixes of the vnet"
              }
            },
            "subnetAddressPrefixes": {
              "type": "string",
              "metadata": {
                "description": "The subnet address prefixes for Dev Box"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of the resource"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "The tags that will be associated to the Resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefixes')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetAddressPrefixes')]"
                    }
                  }
                ]
              },
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "subnetName": {
              "type": "string",
              "value": "[parameters('subnetName')]"
            },
            "subnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('kvName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[variables('kvName')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "15428045515587502988"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "principalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
              }
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvaultSecret",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('kvName')]"
          },
          "name": {
            "value": "[parameters('keyvaultSecretName')]"
          },
          "secretValue": {
            "value": "[parameters('keyvaultSecretValue')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "7554980374654762810"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "keyVaultName": {
              "type": "string"
            },
            "contentType": {
              "type": "string",
              "defaultValue": "string"
            },
            "secretValue": {
              "type": "securestring",
              "metadata": {
                "description": "The value of the secret. Provide only derived values like blob storage access, but do not hard code any secrets in your templates"
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true
            },
            "exp": {
              "type": "int",
              "defaultValue": 0
            },
            "nbf": {
              "type": "int",
              "defaultValue": 0
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
              "tags": "[parameters('tags')]",
              "properties": {
                "attributes": {
                  "enabled": "[parameters('enabled')]",
                  "exp": "[parameters('exp')]",
                  "nbf": "[parameters('nbf')]"
                },
                "contentType": "[parameters('contentType')]",
                "value": "[parameters('secretValue')]"
              }
            }
          ],
          "outputs": {
            "secretIdentifier": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('name')), '2022-07-01').secretUriWithVersion]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('kvName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "devcenter",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "devcenterName": "[if(not(empty(parameters('devcenterName'))), createObject('value', parameters('devcenterName')), createObject('value', format('{0}{1}', variables('abbrs').devcenter, variables('resourceToken'))))]",
          "subnetId": "[if(not(empty(parameters('existingSubnetId'))), createObject('value', parameters('existingSubnetId')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.subnetId.value))]",
          "networkConnectionName": {
            "value": "[variables('ncName')]"
          },
          "projectName": "[if(not(empty(parameters('projectName'))), createObject('value', parameters('projectName')), createObject('value', format('{0}{1}', variables('abbrs').devcenterProject, variables('resourceToken'))))]",
          "networkingResourceGroupName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').devcenterNetworkingResourceGroup, variables('ncName'), parameters('location'))]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "principalType": {
            "value": "[parameters('principalType')]"
          },
          "repositoryUrl": {
            "value": "[parameters('repositoryUrl')]"
          },
          "secretIdentifier": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvaultSecret'), '2022-09-01').outputs.secretIdentifier.value]"
          },
          "galleryName": "[if(not(empty(parameters('galleryName'))), createObject('value', parameters('galleryName')), createObject('value', format('{0}{1}', variables('abbrs').computeGalleries, variables('resourceToken'))))]",
          "imageDefinitionName": {
            "value": "[parameters('imageDefinitionName')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageSku": {
            "value": "[parameters('imageSku')]"
          },
          "managedIdentityName": "[if(not(empty(parameters('managedIdentityName'))), createObject('value', parameters('managedIdentityName')), createObject('value', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))))]",
          "catalogItemRootPath": {
            "value": "[parameters('catalogItemRootPath')]"
          },
          "keyvaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('kvName')), '2022-09-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "6569836831301061107"
            }
          },
          "parameters": {
            "devcenterName": {
              "type": "string"
            },
            "networkConnectionName": {
              "type": "string"
            },
            "networkingResourceGroupName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "projectName": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "secretIdentifier": {
              "type": "string"
            },
            "repositoryUrl": {
              "type": "string"
            },
            "repositoryBranch": {
              "type": "string",
              "defaultValue": "main"
            },
            "catalogItemRootPath": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "managedIdentityName": {
              "type": "string"
            },
            "keyvaultName": {
              "type": "string"
            },
            "galleryName": {
              "type": "string"
            },
            "imageDefinitionName": {
              "type": "string"
            },
            "imageOffer": {
              "type": "string"
            },
            "imagePublisher": {
              "type": "string"
            },
            "imageSku": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "principalType": {
              "type": "string",
              "defaultValue": "User",
              "allowedValues": [
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "catalogName": {
              "type": "string",
              "defaultValue": "test-catalog"
            }
          },
          "variables": {
            "$fxv#0": {
              "definitions": [
                {
                  "name": "win11-vs2022-vscode",
                  "image": "win11-ent-vs2022",
                  "compute": "8-vcpu-32gb-mem",
                  "storage": "512gb"
                },
                {
                  "name": "win11-m365",
                  "image": "win11-ent-m365",
                  "compute": "8-vcpu-32gb-mem",
                  "storage": "256gb"
                },
                {
                  "name": "win11-base",
                  "image": "win11-ent-base",
                  "compute": "8-vcpu-32gb-mem",
                  "storage": "256gb"
                }
              ],
              "pools": [
                {
                  "name": "win11-vs2022-vscode-pool",
                  "definition": "win11-vs2022-vscode",
                  "administrator": "Enabled"
                }
              ],
              "envMapping": [
                {
                  "name": "Dev",
                  "deploymentTargetId": ""
                },
                {
                  "name": "Test",
                  "deploymentTargetId": ""
                },
                {
                  "name": "PreProd",
                  "deploymentTargetId": ""
                },
                {
                  "name": "Prod",
                  "deploymentTargetId": ""
                }
              ]
            },
            "devboxRoleDefinitionId": "45d50f46-0b78-4001-a660-4198cbe8cd05",
            "adeRoledefinitioinId": "18e40d4e-8d2e-438d-97e1-9528336e149c",
            "ownerRoleDefinitioinId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "readerRoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "windows365ApplicationId": "0af06dc6-e4b5-4f28-818e-e78e62d137a5",
            "contributorRoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
            "devceterSettings": "[variables('$fxv#0')]",
            "image": {
              "win11-ent-base": "microsoftwindowsdesktop_windows-ent-cpc_win11-21h2-ent-cpc-os",
              "win11-ent-m365": "microsoftwindowsdesktop_windows-ent-cpc_win11-21h2-ent-cpc-m365",
              "win11-ent-vs2022": "microsoftvisualstudio_visualstudioplustools_vs-2022-ent-general-win11-m365-gen2"
            },
            "compute": {
              "8-vcpu-32gb-mem": "general_a_8c32gb_v1"
            },
            "storage": {
              "256gb": "ssd_256gb",
              "512gb": "ssd_512gb",
              "1024gb": "ssd_1024gb"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "pools",
                "count": "[length(variables('devceterSettings').pools)]"
              },
              "type": "Microsoft.DevCenter/projects/pools",
              "apiVersion": "2022-11-11-preview",
              "name": "[format('{0}/{1}', parameters('projectName'), variables('devceterSettings').pools[copyIndex()].name)]",
              "location": "[parameters('location')]",
              "properties": {
                "devBoxDefinitionName": "[variables('devceterSettings').pools[copyIndex()].definition]",
                "networkConnectionName": "[parameters('networkConnectionName')]",
                "licenseType": "Windows_Client",
                "localAdministrator": "[variables('devceterSettings').pools[copyIndex()].administrator]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/networkConnections', parameters('networkConnectionName'))]",
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "[parameters('managedIdentityName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Compute/galleries",
              "apiVersion": "2022-03-03",
              "name": "[parameters('galleryName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Compute/galleries/images",
              "apiVersion": "2022-03-03",
              "name": "[format('{0}/{1}', parameters('galleryName'), parameters('imageDefinitionName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "hyperVGeneration": "V2",
                "architecture": "x64",
                "features": [
                  {
                    "name": "SecurityType",
                    "value": "TrustedLaunch"
                  }
                ],
                "identifier": {
                  "offer": "[parameters('imageOffer')]",
                  "publisher": "[parameters('imagePublisher')]",
                  "sku": "[parameters('imageSku')]"
                },
                "osState": "Generalized",
                "osType": "Windows"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('galleryName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/devcenters",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('devcenterName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/devcenters/galleries",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), parameters('galleryName'))]",
              "properties": {
                "galleryResourceId": "[resourceId('Microsoft.Compute/galleries', parameters('galleryName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('galleryName'))]",
                "[extensionResourceId(resourceId('Microsoft.Compute/galleries', parameters('galleryName')), 'Microsoft.Authorization/roleAssignments', guid(subscription().id, resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), variables('contributorRoleDefinitionId')))]",
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]",
                "[extensionResourceId(resourceId('Microsoft.Compute/galleries', parameters('galleryName')), 'Microsoft.Authorization/roleAssignments', guid(subscription().id, resourceGroup().id, variables('windows365ApplicationId'), variables('readerRoleDefinitionId')))]"
              ]
            },
            {
              "copy": {
                "name": "envTypes",
                "count": "[length(variables('devceterSettings').envMapping)]"
              },
              "type": "Microsoft.DevCenter/devcenters/environmentTypes",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), variables('devceterSettings').envMapping[copyIndex()].name)]",
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/devcenters/catalogs",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), parameters('catalogName'))]",
              "properties": {
                "gitHub": {
                  "branch": "[parameters('repositoryBranch')]",
                  "path": "[parameters('catalogItemRootPath')]",
                  "secretIdentifier": "[parameters('secretIdentifier')]",
                  "uri": "[parameters('repositoryUrl')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/networkConnections",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('networkConnectionName')]",
              "location": "[parameters('location')]",
              "properties": {
                "domainJoinType": "AzureADJoin",
                "subnetId": "[parameters('subnetId')]",
                "networkingResourceGroupName": "[parameters('networkingResourceGroupName')]"
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.DevCenter/devcenters/attachednetworks",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), parameters('networkConnectionName'))]",
              "properties": {
                "networkConnectionId": "[resourceId('Microsoft.DevCenter/networkConnections', parameters('networkConnectionName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]",
                "[resourceId('Microsoft.DevCenter/networkConnections', parameters('networkConnectionName'))]"
              ]
            },
            {
              "copy": {
                "name": "devboxDefinitions",
                "count": "[length(variables('devceterSettings').definitions)]"
              },
              "type": "Microsoft.DevCenter/devcenters/devboxdefinitions",
              "apiVersion": "2022-11-11-preview",
              "name": "[format('{0}/{1}', parameters('devcenterName'), variables('devceterSettings').definitions[copyIndex()].name)]",
              "location": "[parameters('location')]",
              "properties": {
                "imageReference": {
                  "id": "[format('{0}/galleries/default/images/{1}', resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName')), variables('image')[variables('devceterSettings').definitions[copyIndex()].image])]"
                },
                "sku": {
                  "name": "[variables('compute')[variables('devceterSettings').definitions[copyIndex()].compute]]"
                },
                "osStorageType": "[variables('storage')[variables('devceterSettings').definitions[copyIndex()].storage]]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters/attachednetworks', parameters('devcenterName'), parameters('networkConnectionName'))]",
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "type": "Microsoft.DevCenter/projects",
              "apiVersion": "2022-11-11-preview",
              "name": "[parameters('projectName')]",
              "location": "[parameters('location')]",
              "properties": {
                "devCenterId": "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              },
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "devboxDefinitions",
                "[resourceId('Microsoft.DevCenter/devcenters', parameters('devcenterName'))]"
              ]
            },
            {
              "copy": {
                "name": "projectEnvironmentTypes",
                "count": "[length(variables('devceterSettings').envMapping)]"
              },
              "type": "Microsoft.DevCenter/projects/environmentTypes",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('projectName'), variables('devceterSettings').envMapping[copyIndex()].name)]",
              "properties": {
                "status": "Enabled",
                "creatorRoleAssignment": {
                  "roles": {
                    "[format('{0}', variables('ownerRoleDefinitioinId'))]": {}
                  }
                },
                "deploymentTargetId": "[if(not(empty(variables('devceterSettings').envMapping[copyIndex()].deploymentTargetId)), format('/subscriptions/{0}', variables('devceterSettings').envMapping[copyIndex()].deploymentTargetId), subscription().id)]",
                "userRoleAssignments": {
                  "[format('{0}', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2022-01-31-preview').principalId)]": {
                    "roles": {
                      "[format('{0}', variables('ownerRoleDefinitioinId'))]": {}
                    }
                  }
                }
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Compute/galleries/{0}', parameters('galleryName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, variables('windows365ApplicationId'), variables('readerRoleDefinitionId'))]",
              "properties": {
                "principalId": "[variables('windows365ApplicationId')]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('readerRoleDefinitionId'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('galleryName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Compute/galleries/{0}', parameters('galleryName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), variables('contributorRoleDefinitionId'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2022-01-31-preview').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleDefinitionId'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('galleryName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('principalId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.DevCenter/projects/{0}', parameters('projectName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('devboxRoleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('devboxRoleDefinitionId'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('principalId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.DevCenter/projects/{0}', parameters('projectName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('adeRoledefinitioinId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('adeRoledefinitioinId'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DevCenter/projects', parameters('projectName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "keyvaultAccess",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyvaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2022-01-31-preview').principalId]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.17.1.54307",
                      "templateHash": "18301876310392488097"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "assignOwner",
              "subscriptionId": "[subscription().subscriptionId]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2022-01-31-preview').principalId]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('ownerRoleDefinitioinId')]"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.17.1.54307",
                      "templateHash": "15641417107950418221"
                    }
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(empty(parameters('principalId')))]",
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
              ]
            }
          ],
          "outputs": {
            "devcenterName": {
              "type": "string",
              "value": "[parameters('devcenterName')]"
            },
            "definitions": {
              "type": "array",
              "copy": {
                "count": "[length(variables('devceterSettings').definitions)]",
                "input": {
                  "name": "[variables('devceterSettings').definitions[copyIndex()].name]"
                }
              }
            },
            "networkConnectionName": {
              "type": "string",
              "value": "[parameters('networkConnectionName')]"
            },
            "projectName": {
              "type": "string",
              "value": "[parameters('projectName')]"
            },
            "poolNames": {
              "type": "array",
              "copy": {
                "count": "[length(variables('devceterSettings').pools)]",
                "input": {
                  "name": "[variables('devceterSettings').pools[copyIndex()].name]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('kvName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'keyvaultSecret')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet')]"
      ]
    }
  ],
  "outputs": {
    "vnetName": {
      "type": "string",
      "value": "[if(empty(parameters('existingSubnetId')), reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.vnetName.value, '')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[if(empty(parameters('existingSubnetId')), reference(resourceId('Microsoft.Resources/deployments', 'vnet'), '2022-09-01').outputs.subnetName.value, '')]"
    },
    "devcetnerName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'devcenter'), '2022-09-01').outputs.devcenterName.value]"
    },
    "projectName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'devcenter'), '2022-09-01').outputs.projectName.value]"
    },
    "networkConnectionName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'devcenter'), '2022-09-01').outputs.networkConnectionName.value]"
    },
    "definitions": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'devcenter'), '2022-09-01').outputs.definitions.value]"
    },
    "pools": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'devcenter'), '2022-09-01').outputs.poolNames.value]"
    }
  }
}